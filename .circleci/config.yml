# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-py38:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/python:3.8

    working_directory: ~/repo

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Step 1: obtain repo from github
      - checkout
      # Step 2: install dependencies into virtual environment
      - run:
          name: "install dependencies"
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
      # Step 3: run tests
      - run:
          name: "run tox tests"
          command: |
            . venv/bin/activate
            tox -ve clean,check,docs,py38,report

  build-py39:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/python:3.9

    working_directory: ~/repo

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Step 1: obtain repo from github
      - checkout
      # Step 2: install dependencies into virtual environment
      - run:
          name: "install dependencies"
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
      # Step 3: run tests
      - run:
          name: "run tox tests"
          command: |
            . venv/bin/activate
            tox -ve clean,check,docs,py39,report

  build-py310:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/python:3.10

    working_directory: ~/repo

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Step 1: obtain repo from github
      - checkout
      # Step 2: install dependencies into virtual environment
      - run:
          name: "install dependencies"
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
      # Step 3: run tests
      - run:
          name: "run tox tests"
          command: |
            . venv/bin/activate
            tox -ve clean,check,docs,py310,report

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-workflow:
    jobs:
      - build-py38
      - build-py39
      - build-py310
